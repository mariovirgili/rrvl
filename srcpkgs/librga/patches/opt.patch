diff --git a/Makefile b/Makefile
index 6266b2e..ff19a51 100644
--- a/Makefile
+++ b/Makefile
@@ -12,7 +12,7 @@
 all:
 
 # Some important on-off settings. You can not be too careful about them.
-DEBUG       	:= y
+DEBUG :=
 # Flag of generate a dynamic lib or a static lib: y means yes. If the target is a excutable file, it should be blank!
 GEN_LIBS    	:= y
 # Flag of generate a dynamic lib: y means yes. It should be blank unless you want to generate a dynamic lib!
diff --git a/RockchipRga.cpp b/RockchipRga.cpp
index 23bc22d..b244060 100644
--- a/RockchipRga.cpp
+++ b/RockchipRga.cpp
@@ -34,7 +34,6 @@
 #include "xf86drm.h"
 #endif
 
-
 // ---------------------------------------------------------------------------
 
 RockchipRga::RockchipRga():
@@ -137,12 +136,12 @@ int RockchipRga::RkRgaGetAllocBuffer(bo_t *bo_info, int width, int height, int b
     bo_info->fd = -1;
     bo_info->handle = 0;
     drm_fd = open(card, flag);
-    if (drm_fd < 0) {
+    if (unlikely(drm_fd < 0)) {
         fprintf(stderr, "Fail to open %s: %m\n", card);
         return -errno;
     }
     ret = RkRgaAllocBuffer(drm_fd, bo_info, width, height, bpp);
-    if (ret) {
+    if (likely(ret)) {
         close(drm_fd);
         return ret;
     }
@@ -160,10 +159,10 @@ int RockchipRga::RkRgaGetMmap(bo_t *bo_info)
     memset(&arg, 0, sizeof(arg));
     arg.handle = bo_info->handle;
     ret = drmIoctl(bo_info->fd, DRM_IOCTL_MODE_MAP_DUMB, &arg);
-    if (ret)
+    if (likely(ret))
         return ret;
     map = mmap64(0, bo_info->size, PROT_READ | PROT_WRITE, MAP_SHARED, bo_info->fd, arg.offset);
-    if (map == MAP_FAILED)
+    if (unlikely(map == MAP_FAILED))
        return -EINVAL;
     bo_info->ptr = map;
     return 0;
@@ -205,7 +204,7 @@ int RockchipRga::RkRgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 {
     int ret = 0;
     ret = RgaBlit(src, dst, src1);
-    if (ret) {
+    if (unlikely(ret)) {
         RkRgaLogOutUserPara(src);
         RkRgaLogOutUserPara(dst);
         RkRgaLogOutUserPara(src1);
diff --git a/RockchipRga.h b/RockchipRga.h
index 98cfff6..d6554af 100644
--- a/RockchipRga.h
+++ b/RockchipRga.h
@@ -31,6 +31,11 @@
 
 #include "RockchipRgaMacro.h"
 
+#define likely(x)       __builtin_expect((x),1)
+#define unlikely(x)     __builtin_expect((x),0)
+
+
+
 //////////////////////////////////////////////////////////////////////////////////
 
 // -------------------------------------------------------------------------------
diff --git a/normal/NormalRga.cpp b/normal/NormalRga.cpp
index 0585527..4c75f4b 100644
--- a/normal/NormalRga.cpp
+++ b/normal/NormalRga.cpp
@@ -16,6 +16,10 @@
 #include <sys/ioctl.h> 
 //#include <cutils/properties.h>
 
+#define likely(x)       __builtin_expect((x),1)
+#define unlikely(x)     __builtin_expect((x),0)
+
+
 volatile int32_t refCount = 0;
 struct rgaContext *rgaCtx = NULL;
 
@@ -169,7 +173,7 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 	void *src1Buf = NULL;
 	RECT_t clip;
 
-	if (!ctx) {
+	if (unlikely(!ctx)) {
 		DEBUG("Try to use uninit rgaCtx=%p \n",ctx);
 		return -ENODEV;
 	}
@@ -182,12 +186,12 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 	blend = 0;
 	yuvToRgbMode = 0;
     
-	if (!src && !dst && !src1) {
+	if (unlikely(!src && !dst && !src1)) {
 		DEBUG("src = %p, dst = %p, src1 = %p \n", src, dst, src1);
 		return -EINVAL;
 	}
 
-	if (!src && !dst) {
+	if (unlikely(!src && !dst)) {
 		DEBUG("src = %p, dst = %p \n", src, dst);
 		return -EINVAL;
 	}
@@ -253,12 +257,12 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 	//else if (src && src->hnd)
 		//ret = RkRgaGetHandleMapAddress(src->hnd, &srcBuf);
 
-	if (srcFd == -1 && !srcBuf) {
+	if (unlikely(srcFd == -1 && !srcBuf)) {
 		DEBUG("%d:src has not fd and address for render \n", __LINE__);
 		return ret;
 	}
 
-	if (srcFd == 0 && !srcBuf) {
+	if (unlikely(srcFd == 0 && !srcBuf)) {
 		DEBUG("srcFd is zero, now driver not support \n");
 		return -EINVAL;
 	}
@@ -278,12 +282,12 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 	//else if (dst && dst->hnd)
 		//ret = RkRgaGetHandleMapAddress(dst->hnd, &dstBuf);
     
-	if (dst && dstFd == -1 && !dstBuf) {
+	if (unlikely(dst && dstFd == -1 && !dstBuf)) {
 		DEBUG("%d:dst has not fd and address for render \n", __LINE__);
 		return ret;
 	}
 
-	if (dst && dstFd == 0 && !dstBuf) {
+	if (unlikely(dst && dstFd == 0 && !dstBuf)) {
 		DEBUG("dstFd is zero, now driver not support \n");
 		return -EINVAL;
 	}
@@ -339,7 +343,7 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 
 	if (src) {
 		ret = checkRectForRga(relSrcRect);
-		if (ret) {
+		if (unlikely(ret)) {
 			DEBUG("[%s,%d]Error srcRect \n", __func__, __LINE__);
 			return ret;
 		}
@@ -347,7 +351,7 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 
 	if (dst) {
 		ret = checkRectForRga(relDstRect);
-		if (ret) {
+		if (unlikely(ret)) {
 			DEBUG("[%s,%d]Error dstRect \n", __func__, __LINE__);
 			return ret;
 		}
@@ -360,16 +364,16 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
 			hScale = (float)relSrcRect.width / relDstRect.height;
 			vScale = (float)relSrcRect.height / relDstRect.width;
 		}
-		if (hScale < 1/16 || hScale > 16 || vScale < 1/16 || vScale > 16) {
+		if (unlikely(hScale < 1/16 || hScale > 16 || vScale < 1/16 || vScale > 16)) {
 			DEBUG("Error scale[%f,%f] line %d \n", hScale, vScale, __LINE__);
 			return -EINVAL;
 		}
-		if (ctx->mVersion < 2.0 && (hScale < 1/8 ||
-					hScale > 8 || vScale < 1/8 || vScale > 8)) {
+		if (unlikely(ctx->mVersion < 2.0 && (hScale < 1/8 ||
+					hScale > 8 || vScale < 1/8 || vScale > 8))) {
 			DEBUG("Error scale[%f,%f] line %d \n", hScale, vScale, __LINE__);
 			return -EINVAL;
 		}
-		if (ctx->mVersion <= 1.003 && (hScale < 1/2 || vScale < 1/2)) {
+		if (unlikely(ctx->mVersion <= 1.003 && (hScale < 1/2 || vScale < 1/2))) {
 			DEBUG("e scale[%f,%f] ver[%f] \n", hScale, vScale, ctx->mVersion);
 			return -EINVAL;
 		}
@@ -686,7 +690,7 @@ int RgaBlit(rga_info *src, rga_info *dst, rga_info *src1)
     DEBUG("<<<<-------- rgaReg -------->>>>\n");
 	NormalRgaLogOutRgaReq(rgaReg);
 
-	if(ioctl(ctx->rgaFd, RGA_BLIT_SYNC, &rgaReg)) {
+	if(unlikely(ioctl(ctx->rgaFd, RGA_BLIT_SYNC, &rgaReg))) {
 		DEBUG(" %s(%d) RGA_BLIT fail: %s \n",__FUNCTION__, __LINE__,strerror(errno));
 	}
 	return 0;
diff --git a/normal/NormalRgaContext.h b/normal/NormalRgaContext.h
index 458d470..6792795 100644
--- a/normal/NormalRgaContext.h
+++ b/normal/NormalRgaContext.h
@@ -17,6 +17,7 @@
 #define __DEBUG 0
 #if __DEBUG
 #define DEBUG(format, ...)  printf(format, ##__VA_ARGS__)
+#error dont want debug
 #else
 #define DEBUG(format, ...)
 #endif
